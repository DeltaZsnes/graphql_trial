type Query {
	course(
		eq: [CourseCompare!]
		nq: [CourseCompare!]
		lt: [CourseCompare!]
		le: [CourseCompare!]
		gt: [CourseCompare!]
		ge: [CourseCompare!]
		search: [String!]
		sort: [CourseSort!]
		skip: Int
		take: Int
	): CoursePage!
}

interface Entity {
	id: Int!
}

type Course implements Entity {
	id: Int!
	title: String
	author: String
	topic: String
	url: String
	description: String
}

interface Page {
	skip: Int
	take: Int
	hits: Int
	list: [Entity!]!
}

type CoursePage implements Page {
	skip: Int
	take: Int
	hits: Int
	list: [Course!]!
}

input CourseSort {
	key: CourseKey
	direction: Boolean
}

input CourseCompare {
	key: CourseKey!
	set: [String]!
}

enum CourseKey {
	id
	title
	author
	topic
	url
}
